{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import nltk\nimport re\nimport string \nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom numpy import array\nfrom numpy import asarray\nfrom numpy import zeros\nimport tensorflow as tf\nfrom tensorflow import keras\nimport keras\nfrom keras.preprocessing.text import Tokenizer\nfrom keras.preprocessing.sequence import pad_sequences\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report\nfrom keras.preprocessing import text,sequence\nfrom keras.models import Sequential\nfrom keras.layers import Dense,Embedding,LSTM,Dropout","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:00.346788Z","iopub.execute_input":"2022-04-17T04:57:00.347153Z","iopub.status.idle":"2022-04-17T04:57:06.668552Z","shell.execute_reply.started":"2022-04-17T04:57:00.347072Z","shell.execute_reply":"2022-04-17T04:57:06.667765Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pip install -q -U keras-tuner","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:06.670266Z","iopub.execute_input":"2022-04-17T04:57:06.670599Z","iopub.status.idle":"2022-04-17T04:57:16.263077Z","shell.execute_reply.started":"2022-04-17T04:57:06.670558Z","shell.execute_reply":"2022-04-17T04:57:16.262262Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import keras_tuner as kt","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:16.26493Z","iopub.execute_input":"2022-04-17T04:57:16.26521Z","iopub.status.idle":"2022-04-17T04:57:16.598913Z","shell.execute_reply.started":"2022-04-17T04:57:16.265174Z","shell.execute_reply":"2022-04-17T04:57:16.598202Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"real_data = pd.read_csv('../input/tf-data/True.csv')\nfake_data = pd.read_csv('../input/tf-data/Fake.csv')","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:16.600936Z","iopub.execute_input":"2022-04-17T04:57:16.601177Z","iopub.status.idle":"2022-04-17T04:57:18.780839Z","shell.execute_reply.started":"2022-04-17T04:57:16.601144Z","shell.execute_reply":"2022-04-17T04:57:18.780091Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"real_data['target'] = 1\nfake_data['target'] = 0","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:18.782148Z","iopub.execute_input":"2022-04-17T04:57:18.782415Z","iopub.status.idle":"2022-04-17T04:57:18.794545Z","shell.execute_reply.started":"2022-04-17T04:57:18.782373Z","shell.execute_reply":"2022-04-17T04:57:18.792835Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data = pd.concat([real_data, fake_data], ignore_index=True, sort=False)\ndata.head()","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:18.795921Z","iopub.execute_input":"2022-04-17T04:57:18.796184Z","iopub.status.idle":"2022-04-17T04:57:18.818419Z","shell.execute_reply.started":"2022-04-17T04:57:18.796148Z","shell.execute_reply":"2022-04-17T04:57:18.817682Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data['text']= data['subject'] + \" \" + data['title'] + \" \" + data['text']\ndel data['title']\ndel data['subject']\ndel data['date']\ndata.head()","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:18.819793Z","iopub.execute_input":"2022-04-17T04:57:18.820039Z","iopub.status.idle":"2022-04-17T04:57:18.989588Z","shell.execute_reply.started":"2022-04-17T04:57:18.820005Z","shell.execute_reply":"2022-04-17T04:57:18.988887Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data.dropna()\ndata.fillna(\"\", inplace=True)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:18.990829Z","iopub.execute_input":"2022-04-17T04:57:18.991224Z","iopub.status.idle":"2022-04-17T04:57:19.011112Z","shell.execute_reply.started":"2022-04-17T04:57:18.991187Z","shell.execute_reply":"2022-04-17T04:57:19.0105Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pip install bs4","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:19.012423Z","iopub.execute_input":"2022-04-17T04:57:19.012668Z","iopub.status.idle":"2022-04-17T04:57:28.40686Z","shell.execute_reply.started":"2022-04-17T04:57:19.012634Z","shell.execute_reply":"2022-04-17T04:57:28.405971Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import nltk\nnltk.download('punkt')\nfrom bs4 import BeautifulSoup\nnltk.download(\"stopwords\")   \nfrom nltk.corpus import stopwords\nnltk.download('wordnet')","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:28.411234Z","iopub.execute_input":"2022-04-17T04:57:28.411575Z","iopub.status.idle":"2022-04-17T04:57:28.790356Z","shell.execute_reply.started":"2022-04-17T04:57:28.411543Z","shell.execute_reply":"2022-04-17T04:57:28.7896Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def remove_characters(text):\n    return re.sub(\"[^a-zA-Z]\",\" \",text)\n\n#Removal of stopwords \ndef remove_stopwords_and_lemmatization(text):\n    final_text = []\n    text = text.lower()\n    text = nltk.word_tokenize(text)\n    \n    for word in text:\n        if word not in set(stopwords.words('english')):\n            lemma = nltk.WordNetLemmatizer()\n            word = lemma.lemmatize(word) \n            final_text.append(word)\n    return \" \".join(final_text)\n\n#Total function\ndef cleaning(text):\n    text = remove_characters(text)\n    text = remove_stopwords_and_lemmatization(text)\n    return text\n\n#Apply function on text column\ndata['text']=data['text'].apply(cleaning)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T04:57:28.794439Z","iopub.execute_input":"2022-04-17T04:57:28.794892Z","iopub.status.idle":"2022-04-17T05:41:26.25286Z","shell.execute_reply.started":"2022-04-17T04:57:28.794856Z","shell.execute_reply":"2022-04-17T05:41:26.251934Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data=data.sample(frac=1)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:26.254435Z","iopub.execute_input":"2022-04-17T05:41:26.254694Z","iopub.status.idle":"2022-04-17T05:41:26.264448Z","shell.execute_reply.started":"2022-04-17T05:41:26.254658Z","shell.execute_reply":"2022-04-17T05:41:26.263734Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"data","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:26.265759Z","iopub.execute_input":"2022-04-17T05:41:26.266078Z","iopub.status.idle":"2022-04-17T05:41:26.288883Z","shell.execute_reply.started":"2022-04-17T05:41:26.266034Z","shell.execute_reply":"2022-04-17T05:41:26.288056Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_train1, X_test, y_train1, y_test = train_test_split(data['text'], data['target'],test_size=0.1 ,random_state=42)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:26.290306Z","iopub.execute_input":"2022-04-17T05:41:26.290716Z","iopub.status.idle":"2022-04-17T05:41:26.303131Z","shell.execute_reply.started":"2022-04-17T05:41:26.290679Z","shell.execute_reply":"2022-04-17T05:41:26.302239Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_lvl, X_unl, y_lvl, y_unl = train_test_split(X_train1,y_train1,test_size=0.90,random_state=0)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:26.304281Z","iopub.execute_input":"2022-04-17T05:41:26.304608Z","iopub.status.idle":"2022-04-17T05:41:26.316438Z","shell.execute_reply.started":"2022-04-17T05:41:26.304571Z","shell.execute_reply":"2022-04-17T05:41:26.315564Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"max_features = 3000\nmaxlen = 50","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:26.317804Z","iopub.execute_input":"2022-04-17T05:41:26.318282Z","iopub.status.idle":"2022-04-17T05:41:26.322351Z","shell.execute_reply.started":"2022-04-17T05:41:26.318241Z","shell.execute_reply":"2022-04-17T05:41:26.321539Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tokenizer = text.Tokenizer(num_words=max_features)\ntokenizer.fit_on_texts(X_lvl)\ntokenized_train = tokenizer.texts_to_sequences(X_lvl)\nX_lvl = sequence.pad_sequences(tokenized_train, maxlen=maxlen)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:26.323947Z","iopub.execute_input":"2022-04-17T05:41:26.324369Z","iopub.status.idle":"2022-04-17T05:41:27.517443Z","shell.execute_reply.started":"2022-04-17T05:41:26.324328Z","shell.execute_reply":"2022-04-17T05:41:27.516692Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tokenized_test = tokenizer.texts_to_sequences(X_test)\nX_test = sequence.pad_sequences(tokenized_test, maxlen=maxlen)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:27.519112Z","iopub.execute_input":"2022-04-17T05:41:27.519544Z","iopub.status.idle":"2022-04-17T05:41:28.115434Z","shell.execute_reply.started":"2022-04-17T05:41:27.519506Z","shell.execute_reply":"2022-04-17T05:41:28.114682Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tokenized_unl = tokenizer.texts_to_sequences(X_unl)\nX_unl = sequence.pad_sequences(tokenized_unl, maxlen=maxlen)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:28.116622Z","iopub.execute_input":"2022-04-17T05:41:28.116893Z","iopub.status.idle":"2022-04-17T05:41:32.999708Z","shell.execute_reply.started":"2022-04-17T05:41:28.116857Z","shell.execute_reply":"2022-04-17T05:41:32.998898Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"batch_size = 128","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:33.001086Z","iopub.execute_input":"2022-04-17T05:41:33.001359Z","iopub.status.idle":"2022-04-17T05:41:33.006581Z","shell.execute_reply.started":"2022-04-17T05:41:33.001308Z","shell.execute_reply":"2022-04-17T05:41:33.005099Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras import regularizers\n\ndef build_model(hp):\n    model = Sequential()\n    neurons = hp.Choice('units', values=[32,64, 128,256])\n    model.add(Embedding(max_features, output_dim=100, input_length=maxlen, trainable=False))\n    model.add(LSTM(units=neurons , return_sequences = True , recurrent_dropout =0.25,dropout=0.25))\n    model.add(LSTM(units=neurons , recurrent_dropout = 0.25 , dropout = 0.25))\n    model.add(Dense(units=neurons , activation = 'relu'))\n    model.add(Dense(1, activation='sigmoid'))\n    hp_learning_rate = hp.Choice('learning_rate', values=[1e-1, 1e-2, 1e-3])\n    model.compile(tf.keras.optimizers.Adam(learning_rate=hp_learning_rate),loss='binary_crossentropy', metrics=['accuracy'])\n    return model","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:33.008009Z","iopub.execute_input":"2022-04-17T05:41:33.008492Z","iopub.status.idle":"2022-04-17T05:41:33.0183Z","shell.execute_reply.started":"2022-04-17T05:41:33.008453Z","shell.execute_reply":"2022-04-17T05:41:33.017486Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tuner = kt.Hyperband(build_model,\n                     objective='val_accuracy',\n                     max_epochs=5,\n                     factor=3)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:33.019576Z","iopub.execute_input":"2022-04-17T05:41:33.020046Z","iopub.status.idle":"2022-04-17T05:41:35.588455Z","shell.execute_reply.started":"2022-04-17T05:41:33.020011Z","shell.execute_reply":"2022-04-17T05:41:35.587754Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"stop_early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=5)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:35.589835Z","iopub.execute_input":"2022-04-17T05:41:35.590087Z","iopub.status.idle":"2022-04-17T05:41:35.59455Z","shell.execute_reply.started":"2022-04-17T05:41:35.590053Z","shell.execute_reply":"2022-04-17T05:41:35.593346Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tuner.search(X_lvl,y_lvl, epochs=10, validation_split=0.2, callbacks=[stop_early])\n# Get the optimal hyperparameters\nbest_hps=tuner.get_best_hyperparameters(num_trials=1)[0]","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:41:35.595988Z","iopub.execute_input":"2022-04-17T05:41:35.597696Z","iopub.status.idle":"2022-04-17T05:51:47.039954Z","shell.execute_reply.started":"2022-04-17T05:41:35.597657Z","shell.execute_reply":"2022-04-17T05:51:47.03921Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#model=build_model()","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:51:47.041221Z","iopub.execute_input":"2022-04-17T05:51:47.041573Z","iopub.status.idle":"2022-04-17T05:51:47.045761Z","shell.execute_reply.started":"2022-04-17T05:51:47.041533Z","shell.execute_reply":"2022-04-17T05:51:47.044739Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"maxitr=3\nitera=0\nminconf=0.75\ntl=len(data)-len(X_test)\nixll=len(X_lvl)\nixul=len(X_unl)\nX_train=X_lvl\ny_train=y_lvl\nmodel=tuner.hypermodel.build(best_hps)\nhistory = model.fit(X_train, y_train, validation_split=0.3, epochs=100, batch_size=batch_size, shuffle=True, verbose = 1)\nwhile(len(X_unl)>0):\n    pred1=(model.predict(X_unl))\n    pred0=1-pred1\n    df_pred_prob = pd.DataFrame([])\n    df_pred_prob['prob_0'] = (pred0).tolist()\n    df_pred_prob['prob_1'] = (pred1).tolist()\n    df_pred_prob['text']=X_unl.tolist()\n    df=df_pred_prob\n    yln=[]\n    Xln=[]\n    Xun=[]\n    for i in range(len(X_unl)):\n        if((df['prob_0'][i][0])>minconf):\n            yln=yln+[0]\n            Xln=Xln+[df['text'][i]]\n        elif((df['prob_1'][i][0])>minconf):\n            yln=yln+[1]\n            Xln=Xln+[df['text'][i]]\n        else:\n            Xun=Xun+[df['text'][i]]\n    \n    y_train=np.concatenate((y_train,yln),axis=0)\n    X_train=np.concatenate((X_train,Xln),axis=0)\n    ixll=len(X_train)\n    print(\"length of train data:=\")\n    print(ixll)\n    model=tuner.hypermodel.build(best_hps)\n    history = model.fit(X_train, y_train, validation_split=0.3, epochs=50, batch_size=batch_size, shuffle=True, verbose = 1)\n    X_unl = np.array(Xun)\n    print(\"length of remaining unlabled data:=\")\n    print(len(X_unl))\n    itera=itera+1\n    if (itera==maxitr):\n        break\n    \n    \n    ","metadata":{"execution":{"iopub.status.busy":"2022-04-17T05:51:47.047259Z","iopub.execute_input":"2022-04-17T05:51:47.04763Z","iopub.status.idle":"2022-04-17T09:56:37.958534Z","shell.execute_reply.started":"2022-04-17T05:51:47.047594Z","shell.execute_reply":"2022-04-17T09:56:37.95776Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_res=(model.predict(X_test) > 0.5).astype(\"int32\")\ntest_res=test_res.flatten()\ny_test_c = y_test.to_numpy()","metadata":{"execution":{"iopub.status.busy":"2022-04-17T09:56:37.962534Z","iopub.execute_input":"2022-04-17T09:56:37.964075Z","iopub.status.idle":"2022-04-17T09:56:41.274416Z","shell.execute_reply.started":"2022-04-17T09:56:37.964038Z","shell.execute_reply":"2022-04-17T09:56:41.273661Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"count=0\nfor i in range(0,len(y_test_c)):\n    if(y_test_c[i]==test_res[i]):\n        count=count+1\nprint(count)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T09:56:41.275764Z","iopub.execute_input":"2022-04-17T09:56:41.276013Z","iopub.status.idle":"2022-04-17T09:56:41.284904Z","shell.execute_reply.started":"2022-04-17T09:56:41.27598Z","shell.execute_reply":"2022-04-17T09:56:41.284207Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"accuracy=(count/len(test_res))*100","metadata":{"execution":{"iopub.status.busy":"2022-04-17T09:56:41.286078Z","iopub.execute_input":"2022-04-17T09:56:41.286473Z","iopub.status.idle":"2022-04-17T09:56:41.294005Z","shell.execute_reply.started":"2022-04-17T09:56:41.286436Z","shell.execute_reply":"2022-04-17T09:56:41.293234Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(\"Accuracy at 10% labled data\",accuracy)","metadata":{"execution":{"iopub.status.busy":"2022-04-17T09:56:41.295246Z","iopub.execute_input":"2022-04-17T09:56:41.295628Z","iopub.status.idle":"2022-04-17T09:56:41.303056Z","shell.execute_reply.started":"2022-04-17T09:56:41.295593Z","shell.execute_reply":"2022-04-17T09:56:41.302366Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(classification_report(y_test,test_res, target_names = ['Fake','Real']))","metadata":{"execution":{"iopub.status.busy":"2022-04-17T09:56:41.304187Z","iopub.execute_input":"2022-04-17T09:56:41.305028Z","iopub.status.idle":"2022-04-17T09:56:41.322663Z","shell.execute_reply.started":"2022-04-17T09:56:41.304993Z","shell.execute_reply":"2022-04-17T09:56:41.321987Z"},"trusted":true},"execution_count":null,"outputs":[]}]}